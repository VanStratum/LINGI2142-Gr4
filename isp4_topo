#!/bin/bash

# Create a virtual network using network namespaces and veth pairs
# to connect them.
# Assuming $CONFIGDIR == "cfg":
# * Files in cfg/<Node name> will be overlaid over /etc, i.e. if a file with
# the same name exists in both directory, the one in cfg/<Node name> will
# be the one used.
# * If cfg/<Node name>_$BOOT (defaults to cfg/<Node name>_boot) exists and
# is executable, it will be executed when the node is created
# * If cfg/<Node name>_$STARTUP (defaults to cfg/<Node name>_start) exists and
# is executable, it will be executed when the whole network has started
#

# IMPORTANT NOTE: Node names MUST NOT exceed 9 characters.
# This is due to the limitation to 14 characters of interface names

# You can override any of these settings on a per-topology basis
# Group number
GROUPNUMBER=4
# Node configs  
CONFIGDIR=network_cfg
# boot script name
BOOT="boot"
# startup script name
STARTUP="start"
PREFIXBASE="fde4:${GROUPNUMBER}"
PREFIXLEN=32
# You can reuse the above two to generate ip addresses/routes, ...
# e.g. "${PREFIXBASE}:1234::/$((PREFIXLEN+16))"

# This function describes the network topology that we want to emulate
function mk_topo {
    echo "@@ Adding links and nodes"
    # Build a small network R1 - R2 - R3 - R4
    # The network is a ring as the UCL network
    # Nodes are creadted on the fly, and their interface are assigned as
    # <node name>-eth<count>, where count starts at 0 and is increased by 1
    # after each new interface
    # R1-eth0 links to R3-eth0
    add_link R1 R3
    # R1-eth1 links to R5-eth0
    add_link R1 R5
    # R1-eth2 links to R2-eth0
    add_link R1 R2
    # R1-eth3 links to R7-eth0
    add_link R1 R7
    # R2-eth1 links to R4-eth0
    add_link R2 R4
    # R2-eth2 links to R6-eth0
    add_link R2 R6
    # R2-eth3 links to R8-eth0
    add_link R2 R8
    # R3-eth1 links to R7-eth1
    add_link R3 R7
    # R3-eth2 links to R5-eth1
    add_link R3 R5
    # R3-eth3 links to R4-eth1
    add_link R3 R4
    # R4-eth2 links to R8-eth1
    add_link R4 R8
    # R4-eth3 links to R6-eth1
    add_link R4 R6
    # R5-eth2 links to R7-eth2
    add_link R5 R7
    # R5-eth3 links to R6-eth2
    add_link R5 R6
    # R6-eth3 links to R8-eth2
    add_link R6 R8
    # R8-eth3 links to R7-eth3
    add_link R8 R7
    # R9-eth0 links to R10-eth0
    add_link R9 R10
    # R9-eth0 links to R10-eth0
    add_link R9 R11

    #echo "@@ Adding LANs"
    # Create a new LAN (subnet), attached to BELNET, with 2 hosts: B1 and B2
    #mk_LAN BELNET B1 B2
    # Same but with 4 hosts in LLN
    #mk_LAN LLN L1 L2 L3 L4

    echo "@@ Briding the network"
    # Connect BELNET to its two connectivity providers
    bridge_node R9 eth1 bgp_as64512
    #bridge_node BELNET eth2 as300
}

